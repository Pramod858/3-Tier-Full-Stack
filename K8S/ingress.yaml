---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-cpr-demo
#   namespace: workshop
#   annotations:
#     alb.ingress.kubernetes.io/load-balancer-name: cpr-ingress
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
#     alb.ingress.kubernetes.io/healthcheck-path: /
#     alb.ingress.kubernetes.io/healthcheck-port: 'traffic-port'
#     alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
#     alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
#     alb.ingress.kubernetes.io/success-codes: '200'
#     alb.ingress.kubernetes.io/healthy-threshold-count: '2'
#     alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
#     kubernetes.io/ingress.class: alb
# spec:
#   ingressClassName: alb
#   rules:
#     - http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: myapp-service
#                 port: 
#                   number: 80
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-cpr-demo
  namespace: workshop
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: cpr-ingress
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-port: '80'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    kubernetes.io/ingress.class: alb
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: myapp-service
                port: 
                  number: 80
